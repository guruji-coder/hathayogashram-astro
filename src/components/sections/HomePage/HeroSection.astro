---
import { carouselSlides } from '$constants/carousel';
---

<section class="relative h-screen w-full overflow-hidden" id="hero-section">
  <div class="relative h-full w-full">
    {
      carouselSlides.map((slide, index) => (
        <div
          class:list={[
            `hero-slide absolute inset-0 h-full w-full transition-all duration-1000`,
            { 'z-10 opacity-100': index === 0, 'z-0 opacity-0': index !== 0 },
          ]}
          data-slide={index}
        >
          <img
            alt={slide.title}
            class="absolute inset-0 h-full w-full object-cover"
            src={slide.image}
          />
          <div class="absolute inset-0 bg-black bg-opacity-30" />
          <div class="relative z-20 flex h-full items-center justify-center px-4">
            <div class="mx-auto max-w-full text-center text-white">
              <p class="mb-2 text-lg font-bold leading-relaxed opacity-90 sm:text-xl md:text-2xl">
                {slide.title}
              </p>
              <h1 class="mb-6 font-kaushan text-4xl font-bold leading-tight sm:text-5xl md:text-6xl lg:text-7xl">
                {slide.subtitle}
              </h1>
              <a
                class="inline-block transform rounded-lg bg-orange-500 px-8 py-4 text-lg font-semibold text-white shadow-lg transition-all duration-300 hover:scale-105"
                href={slide.primaryButton.href}
              >
                {slide.primaryButton.text}
              </a>
            </div>
          </div>
        </div>
      ))
    }
  </div>
  <button
    aria-label="Previous slide"
    class="group absolute left-4 top-1/2 z-30 -translate-y-1/2 rounded-full bg-opacity-20 p-3 transition-all duration-300 hover:bg-opacity-40 sm:left-6 sm:p-4"
    id="prev-btn"
  >
    <svg
      class="h-5 w-5 text-white transition-transform group-hover:scale-110 sm:h-6 sm:w-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      ><path d="M15 19l-7-7 7-7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
      ></path></svg
    >
  </button>
  <button
    aria-label="Next slide"
    class="group absolute right-4 top-1/2 z-30 -translate-y-1/2 rounded-full bg-opacity-20 p-3 transition-all duration-300 hover:bg-opacity-40 sm:right-6 sm:p-4"
    id="next-btn"
  >
    <svg
      class="h-5 w-5 text-white transition-transform group-hover:scale-110 sm:h-6 sm:w-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      ><path d="M9 5l7 7-7 7" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
      ></path></svg
    >
  </button>
  <div class="absolute bottom-6 left-1/2 z-30 flex -translate-x-1/2 gap-3 sm:bottom-8">
    {
      carouselSlides.map((_, index) => (
        <button
          aria-label={`Go to slide ${index + 1}`}
          class:list={[
            `hero-dot h-3 w-3 rounded-full transition-all duration-300`,
            {
              'scale-125 bg-white': index === 0,
              'bg-white bg-opacity-50 hover:bg-opacity-75': index !== 0,
            },
          ]}
          data-slide-index={index}
        />
      ))
    }
  </div>
</section>

<script is:inline>
  (function initCarousel() {
    let idx = 0,
      auto;
    const slides = document.querySelectorAll('.hero-slide');
    const dots = document.querySelectorAll('.hero-dot');
    const prev = document.getElementById('prev-btn');
    const next = document.getElementById('next-btn');
    function show(i) {
      slides.forEach((s, j) => {
        s.style.opacity = j === i ? '1' : '0';
        s.style.zIndex = j === i ? '10' : '0';
      });
      dots.forEach(
        (d, j) => (d.style.backgroundColor = j === i ? 'white' : 'rgba(255,255,255,0.5)')
      );
      idx = i;
    }
    function nav(dir) {
      show((idx + dir + slides.length) % slides.length);
      reset();
    }
    function reset() {
      clearInterval(auto);
      auto = setInterval(() => nav(1), 4000);
    }
    prev.onclick = () => nav(-1);
    next.onclick = () => nav(1);
    dots.forEach(
      (d, i) =>
        (d.onclick = () => {
          show(i);
          reset();
        })
    );
    reset();
    show(0);
  })();
</script>
